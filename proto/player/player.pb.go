// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1-devel
// 	protoc        v5.26.1
// source: player.proto

package player

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// now we have only 1,2,5,6
type PlayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stationid int32 `protobuf:"varint,1,opt,name=stationid,proto3" json:"stationid,omitempty"`
}

func (x *PlayRequest) Reset() {
	*x = PlayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayRequest) ProtoMessage() {}

func (x *PlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayRequest.ProtoReflect.Descriptor instead.
func (*PlayRequest) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{0}
}

func (x *PlayRequest) GetStationid() int32 {
	if x != nil {
		return x.Stationid
	}
	return 0
}

type PlayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success                 bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	StationName             string `protobuf:"bytes,2,opt,name=stationName,proto3" json:"stationName,omitempty"`
	StationListenUrl        string `protobuf:"bytes,3,opt,name=stationListenUrl,proto3" json:"stationListenUrl,omitempty"`
	StationDescription      string `protobuf:"bytes,4,opt,name=stationDescription,proto3" json:"stationDescription,omitempty"`
	NowplayingSongId        string `protobuf:"bytes,5,opt,name=nowplayingSongId,proto3" json:"nowplayingSongId,omitempty"`
	NowplayingSongArtist    string `protobuf:"bytes,6,opt,name=nowplayingSongArtist,proto3" json:"nowplayingSongArtist,omitempty"`
	NowplayingSongTitle     string `protobuf:"bytes,7,opt,name=nowplayingSongTitle,proto3" json:"nowplayingSongTitle,omitempty"`
	NowplayingSongAlbum     string `protobuf:"bytes,8,opt,name=nowplayingSongAlbum,proto3" json:"nowplayingSongAlbum,omitempty"`
	NowplayingSongGenre     string `protobuf:"bytes,9,opt,name=nowplayingSongGenre,proto3" json:"nowplayingSongGenre,omitempty"`
	NowplayingSongArt       string `protobuf:"bytes,10,opt,name=nowplayingSongArt,proto3" json:"nowplayingSongArt,omitempty"`
	NowplayingSongLyric     string `protobuf:"bytes,11,opt,name=nowplayingSongLyric,proto3" json:"nowplayingSongLyric,omitempty"`
	NowplayingSongElapsed   int32  `protobuf:"varint,12,opt,name=nowplayingSongElapsed,proto3" json:"nowplayingSongElapsed,omitempty"`
	NowplayingSongRemaining int32  `protobuf:"varint,13,opt,name=nowplayingSongRemaining,proto3" json:"nowplayingSongRemaining,omitempty"`
	ListenersTotal          int32  `protobuf:"varint,14,opt,name=listenersTotal,proto3" json:"listenersTotal,omitempty"`
	ListenersUnique         int32  `protobuf:"varint,15,opt,name=listenersUnique,proto3" json:"listenersUnique,omitempty"`
	ListenersCurrent        int32  `protobuf:"varint,16,opt,name=listenersCurrent,proto3" json:"listenersCurrent,omitempty"`
}

func (x *PlayResponse) Reset() {
	*x = PlayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayResponse) ProtoMessage() {}

func (x *PlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayResponse.ProtoReflect.Descriptor instead.
func (*PlayResponse) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{1}
}

func (x *PlayResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PlayResponse) GetStationName() string {
	if x != nil {
		return x.StationName
	}
	return ""
}

func (x *PlayResponse) GetStationListenUrl() string {
	if x != nil {
		return x.StationListenUrl
	}
	return ""
}

func (x *PlayResponse) GetStationDescription() string {
	if x != nil {
		return x.StationDescription
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongId() string {
	if x != nil {
		return x.NowplayingSongId
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongArtist() string {
	if x != nil {
		return x.NowplayingSongArtist
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongTitle() string {
	if x != nil {
		return x.NowplayingSongTitle
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongAlbum() string {
	if x != nil {
		return x.NowplayingSongAlbum
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongGenre() string {
	if x != nil {
		return x.NowplayingSongGenre
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongArt() string {
	if x != nil {
		return x.NowplayingSongArt
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongLyric() string {
	if x != nil {
		return x.NowplayingSongLyric
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongElapsed() int32 {
	if x != nil {
		return x.NowplayingSongElapsed
	}
	return 0
}

func (x *PlayResponse) GetNowplayingSongRemaining() int32 {
	if x != nil {
		return x.NowplayingSongRemaining
	}
	return 0
}

func (x *PlayResponse) GetListenersTotal() int32 {
	if x != nil {
		return x.ListenersTotal
	}
	return 0
}

func (x *PlayResponse) GetListenersUnique() int32 {
	if x != nil {
		return x.ListenersUnique
	}
	return 0
}

func (x *PlayResponse) GetListenersCurrent() int32 {
	if x != nil {
		return x.ListenersCurrent
	}
	return 0
}

var File_player_proto protoreflect.FileDescriptor

var file_player_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b,
	0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22, 0xea, 0x05, 0x0a, 0x0c,
	0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61, 0x79, 0x69,
	0x6e, 0x67, 0x53, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x14, 0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x6f,
	0x6e, 0x67, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6e, 0x67, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61, 0x79, 0x69,
	0x6e, 0x67, 0x53, 0x6f, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6e,
	0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61,
	0x79, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6e, 0x67, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53,
	0x6f, 0x6e, 0x67, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x6f, 0x77, 0x70,
	0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6e, 0x67, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e,
	0x67, 0x53, 0x6f, 0x6e, 0x67, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f,
	0x77, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6e, 0x67, 0x41, 0x72, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e,
	0x67, 0x53, 0x6f, 0x6e, 0x67, 0x41, 0x72, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x6f, 0x77, 0x70,
	0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6e, 0x67, 0x4c, 0x79, 0x72, 0x69, 0x63, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e,
	0x67, 0x53, 0x6f, 0x6e, 0x67, 0x4c, 0x79, 0x72, 0x69, 0x63, 0x12, 0x34, 0x0a, 0x15, 0x6e, 0x6f,
	0x77, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6e, 0x67, 0x45, 0x6c, 0x61, 0x70,
	0x73, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6e, 0x6f, 0x77, 0x70, 0x6c,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6e, 0x67, 0x45, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64,
	0x12, 0x38, 0x0a, 0x17, 0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x6f,
	0x6e, 0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x17, 0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6e,
	0x67, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x32, 0x2d, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x0c, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x59, 0x61, 0x72, 0x61, 0x6e, 0x64, 0x69, 0x2f, 0x72, 0x61,
	0x64, 0x69, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x2f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_player_proto_rawDescOnce sync.Once
	file_player_proto_rawDescData = file_player_proto_rawDesc
)

func file_player_proto_rawDescGZIP() []byte {
	file_player_proto_rawDescOnce.Do(func() {
		file_player_proto_rawDescData = protoimpl.X.CompressGZIP(file_player_proto_rawDescData)
	})
	return file_player_proto_rawDescData
}

var file_player_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_player_proto_goTypes = []interface{}{
	(*PlayRequest)(nil),  // 0: PlayRequest
	(*PlayResponse)(nil), // 1: PlayResponse
}
var file_player_proto_depIdxs = []int32{
	0, // 0: Player.Play:input_type -> PlayRequest
	1, // 1: Player.Play:output_type -> PlayResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_player_proto_init() }
func file_player_proto_init() {
	if File_player_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_player_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_player_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_player_proto_goTypes,
		DependencyIndexes: file_player_proto_depIdxs,
		MessageInfos:      file_player_proto_msgTypes,
	}.Build()
	File_player_proto = out.File
	file_player_proto_rawDesc = nil
	file_player_proto_goTypes = nil
	file_player_proto_depIdxs = nil
}

