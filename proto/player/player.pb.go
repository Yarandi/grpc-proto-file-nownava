// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: player.proto

package player

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// now we have only 1,2,5,6
type PlayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stationid     int32                  `protobuf:"varint,1,opt,name=stationid,proto3" json:"stationid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayRequest) Reset() {
	*x = PlayRequest{}
	mi := &file_player_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayRequest) ProtoMessage() {}

func (x *PlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayRequest.ProtoReflect.Descriptor instead.
func (*PlayRequest) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{0}
}

func (x *PlayRequest) GetStationid() int32 {
	if x != nil {
		return x.Stationid
	}
	return 0
}

type PlayResponse struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Success                 bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	StationName             string                 `protobuf:"bytes,2,opt,name=stationName,proto3" json:"stationName,omitempty"`
	StationListenUrl        string                 `protobuf:"bytes,3,opt,name=stationListenUrl,proto3" json:"stationListenUrl,omitempty"`
	StationDescription      string                 `protobuf:"bytes,4,opt,name=stationDescription,proto3" json:"stationDescription,omitempty"`
	NowplayingSongId        string                 `protobuf:"bytes,5,opt,name=nowplayingSongId,proto3" json:"nowplayingSongId,omitempty"`
	NowplayingSongArtist    string                 `protobuf:"bytes,6,opt,name=nowplayingSongArtist,proto3" json:"nowplayingSongArtist,omitempty"`
	NowplayingSongTitle     string                 `protobuf:"bytes,7,opt,name=nowplayingSongTitle,proto3" json:"nowplayingSongTitle,omitempty"`
	NowplayingSongAlbum     string                 `protobuf:"bytes,8,opt,name=nowplayingSongAlbum,proto3" json:"nowplayingSongAlbum,omitempty"`
	NowplayingSongGenre     string                 `protobuf:"bytes,9,opt,name=nowplayingSongGenre,proto3" json:"nowplayingSongGenre,omitempty"`
	NowplayingSongArt       string                 `protobuf:"bytes,10,opt,name=nowplayingSongArt,proto3" json:"nowplayingSongArt,omitempty"`
	NowplayingSongLyric     string                 `protobuf:"bytes,11,opt,name=nowplayingSongLyric,proto3" json:"nowplayingSongLyric,omitempty"`
	NowplayingSongElapsed   int32                  `protobuf:"varint,12,opt,name=nowplayingSongElapsed,proto3" json:"nowplayingSongElapsed,omitempty"`
	NowplayingSongRemaining int32                  `protobuf:"varint,13,opt,name=nowplayingSongRemaining,proto3" json:"nowplayingSongRemaining,omitempty"`
	ListenersTotal          int32                  `protobuf:"varint,14,opt,name=listenersTotal,proto3" json:"listenersTotal,omitempty"`
	ListenersUnique         int32                  `protobuf:"varint,15,opt,name=listenersUnique,proto3" json:"listenersUnique,omitempty"`
	ListenersCurrent        int32                  `protobuf:"varint,16,opt,name=listenersCurrent,proto3" json:"listenersCurrent,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PlayResponse) Reset() {
	*x = PlayResponse{}
	mi := &file_player_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayResponse) ProtoMessage() {}

func (x *PlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayResponse.ProtoReflect.Descriptor instead.
func (*PlayResponse) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{1}
}

func (x *PlayResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PlayResponse) GetStationName() string {
	if x != nil {
		return x.StationName
	}
	return ""
}

func (x *PlayResponse) GetStationListenUrl() string {
	if x != nil {
		return x.StationListenUrl
	}
	return ""
}

func (x *PlayResponse) GetStationDescription() string {
	if x != nil {
		return x.StationDescription
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongId() string {
	if x != nil {
		return x.NowplayingSongId
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongArtist() string {
	if x != nil {
		return x.NowplayingSongArtist
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongTitle() string {
	if x != nil {
		return x.NowplayingSongTitle
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongAlbum() string {
	if x != nil {
		return x.NowplayingSongAlbum
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongGenre() string {
	if x != nil {
		return x.NowplayingSongGenre
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongArt() string {
	if x != nil {
		return x.NowplayingSongArt
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongLyric() string {
	if x != nil {
		return x.NowplayingSongLyric
	}
	return ""
}

func (x *PlayResponse) GetNowplayingSongElapsed() int32 {
	if x != nil {
		return x.NowplayingSongElapsed
	}
	return 0
}

func (x *PlayResponse) GetNowplayingSongRemaining() int32 {
	if x != nil {
		return x.NowplayingSongRemaining
	}
	return 0
}

func (x *PlayResponse) GetListenersTotal() int32 {
	if x != nil {
		return x.ListenersTotal
	}
	return 0
}

func (x *PlayResponse) GetListenersUnique() int32 {
	if x != nil {
		return x.ListenersUnique
	}
	return 0
}

func (x *PlayResponse) GetListenersCurrent() int32 {
	if x != nil {
		return x.ListenersCurrent
	}
	return 0
}

var File_player_proto protoreflect.FileDescriptor

const file_player_proto_rawDesc = "" +
	"\n" +
	"\fplayer.proto\"+\n" +
	"\vPlayRequest\x12\x1c\n" +
	"\tstationid\x18\x01 \x01(\x05R\tstationid\"\xea\x05\n" +
	"\fPlayResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12 \n" +
	"\vstationName\x18\x02 \x01(\tR\vstationName\x12*\n" +
	"\x10stationListenUrl\x18\x03 \x01(\tR\x10stationListenUrl\x12.\n" +
	"\x12stationDescription\x18\x04 \x01(\tR\x12stationDescription\x12*\n" +
	"\x10nowplayingSongId\x18\x05 \x01(\tR\x10nowplayingSongId\x122\n" +
	"\x14nowplayingSongArtist\x18\x06 \x01(\tR\x14nowplayingSongArtist\x120\n" +
	"\x13nowplayingSongTitle\x18\a \x01(\tR\x13nowplayingSongTitle\x120\n" +
	"\x13nowplayingSongAlbum\x18\b \x01(\tR\x13nowplayingSongAlbum\x120\n" +
	"\x13nowplayingSongGenre\x18\t \x01(\tR\x13nowplayingSongGenre\x12,\n" +
	"\x11nowplayingSongArt\x18\n" +
	" \x01(\tR\x11nowplayingSongArt\x120\n" +
	"\x13nowplayingSongLyric\x18\v \x01(\tR\x13nowplayingSongLyric\x124\n" +
	"\x15nowplayingSongElapsed\x18\f \x01(\x05R\x15nowplayingSongElapsed\x128\n" +
	"\x17nowplayingSongRemaining\x18\r \x01(\x05R\x17nowplayingSongRemaining\x12&\n" +
	"\x0elistenersTotal\x18\x0e \x01(\x05R\x0elistenersTotal\x12(\n" +
	"\x0flistenersUnique\x18\x0f \x01(\x05R\x0flistenersUnique\x12*\n" +
	"\x10listenersCurrent\x18\x10 \x01(\x05R\x10listenersCurrent2/\n" +
	"\x06Player\x12%\n" +
	"\x04Play\x12\f.PlayRequest\x1a\r.PlayResponse0\x01B+Z)github.com/Yarandi/radio_player_go/playerb\x06proto3"

var (
	file_player_proto_rawDescOnce sync.Once
	file_player_proto_rawDescData []byte
)

func file_player_proto_rawDescGZIP() []byte {
	file_player_proto_rawDescOnce.Do(func() {
		file_player_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_player_proto_rawDesc), len(file_player_proto_rawDesc)))
	})
	return file_player_proto_rawDescData
}

var file_player_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_player_proto_goTypes = []any{
	(*PlayRequest)(nil),  // 0: PlayRequest
	(*PlayResponse)(nil), // 1: PlayResponse
}
var file_player_proto_depIdxs = []int32{
	0, // 0: Player.Play:input_type -> PlayRequest
	1, // 1: Player.Play:output_type -> PlayResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_player_proto_init() }
func file_player_proto_init() {
	if File_player_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_player_proto_rawDesc), len(file_player_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_player_proto_goTypes,
		DependencyIndexes: file_player_proto_depIdxs,
		MessageInfos:      file_player_proto_msgTypes,
	}.Build()
	File_player_proto = out.File
	file_player_proto_goTypes = nil
	file_player_proto_depIdxs = nil
}
